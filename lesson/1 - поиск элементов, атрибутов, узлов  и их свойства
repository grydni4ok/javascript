DOM – это представление документа в виде дерева объектов

<HTML> = document.documentElement
<BODY> = document.body
Псевдо-массив childNodes хранит все дочерние элементы, включая текстовые //только для чтения!!!! На самом деле это не массив, а 
коллекция – особый перебираемый объект-псевдомассив. Для перебора коллекции мы можем использовать for..of
children – только дочерние узлы-элементы, то есть соответствующие тегам
Свойства firstChild и lastChild обеспечивают быстрый доступ к первому и последнему элементу
Доступ к элементам слева и справа данного можно получить по ссылкам previousSibling / nextSibling
Родитель доступен через parentNode

Есть два основных набора ссылок:
Для всех узлов: parentNode, childNodes, firstChild, lastChild, previousSibling, nextSibling.
Только для узлов-элементов: parentElement, children, firstElementChild, lastElementChild, previousElementSibling, nextElementSibling.

document.getElementById('content') - доступ к элемменту через id
// elem.getElementsByTagName('tag') - ищет все элементы с заданным тегом tag внутри элемента elem и возвращает их в виде списка
// elem.getElementsByClassName('className') возвращает коллекцию элементов с классом className
elem.querySelectorAll(css) возвращает все элементы внутри elem, удовлетворяющие CSS-селектору css
elem.querySelector(css) возвращает только первый элемент, соответствующий CSS-селектору css

elem.matches(css) ничего не ищет, а проверяет, удовлетворяет ли elem CSS-селектору, и возвращает true или false

elem.closest(css) ищет ближайшего предка, который соответствует CSS-селектору. Сам элемент также включается в поиск

elemA.contains(elemB) вернёт true, если elemB находится внутри elemA (elemB потомок elemA) или когда elemA==elemB


СВОЙСТВА УЗЛОВ
nodeType - Свойство nodeType позволяет узнать тип DOM-узла. Его значение – числовое: 1 для элементов,3 для текстовых узлов, 
и т.д. Только для чтения.
nodeName/tagName - Для элементов это свойство возвращает название тега (записывается в верхнем регистре, за исключением XML-режима). 
Для узлов-неэлементов nodeName описывает, что это за узел. Только для чтения.
innerHTML - Внутреннее HTML-содержимое узла-элемента. Можно изменять.
outerHTML - Полный HTML узла-элемента. Запись в elem.outerHTML не меняет elem. Вместо этого она заменяет его во внешнем контексте
nodeValue/data - Содержимое узла-неэлемента (текст, комментарий). Эти свойства практически одинаковые, обычно мы используем data. 
Можно изменять.
textContent - Текст внутри элемента: HTML за вычетом всех <тегов>. Запись в него помещает текст в элемент, при этом все специальные 
символы и теги интерпретируются как текст. Можно использовать для защиты от вставки произвольного HTML кода.

document.write('<td>') - запись в текущем месте

АТРИБУТЫ:
  elem.hasAttribute(name) – проверяет наличие атрибута
  elem.getAttribute(name) – получает значение атрибута
  elem.setAttribute(name, value) – устанавливает атрибут
  elem.removeAttribute(name) – удаляет атрибут
  elem.attributes - получение всех атрибутов свойства
    for (let attr of elem.attributes) { // (4) весь список
        alert( `${attr.name} = ${attr.value}` );
    }
    
dataset - позволяет получить доступ к data атрибутам, через свойство (пример: 
    <div id="elem" data-about="Elephant"> alert(elem.dataset.about);)
  
  

  
  
  
