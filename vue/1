<div id="app">
  <input type="text" v-on:input="changeName">
  <h1>Hello {{ name }} </h1> // Vue!
  <h1>Sum: {{ 10+60 }} </h1> // 70
  <h1>Method: {{ sayHi() }} hi all
  <h1>If statement: {{ isOK ? 'i am OK' : 'i am not OK' }} </h1> // i am OK
  <h1>Functions: {{ string.split('').reverse().join('') }} </h1> // js код
  <h1><a v-bind:href="url"> {{ url }} </a></h1> // присваивание ссылок
  <h1 v-html="link"></h1> //вставиться ссылка на google
</div>
  
<script>		
  new Vue({
    el: '#app',
      data: {
      name: 'Vue!',
      isOK: true,
      string: 'My name is Egor',
      url: 'http://google.com',
      link: '<a href="http://google.com">google</a>'
    },
    methods: {
      sayHi: function(){
        return 'hi all' 
      }  
    } 
  })
</script>

Вызов собитый осуществляется с помощья специального атрибута v-on/@:
  <h1 v-on:mouseover="onHover('изменен цвет', $event)">счетчик {{ counter }} </h1>
  <button v-on:click="counter++">Увеличить</button>
  все функции прописываются в methods.
  
Условия отображения блоков:
  v-if="isVisible" //если значение true, то данный елемент отобразится, если нет то елемента не будет даже в dom дереве
  v-else/v-else-is //продолжение условия
  v-show="isVisible" // если значение true, то данный елемент отобразится, если нет то елементу просто присвоят св-во display: none

Модификаторы событий 
  v-on:click:prevent="" - отсенит собитые нажание на элемент
  v-on:mousemove:stop="" - отменит событие движение мыши по элементу
  
Условие выставление классов:
@click="isActive = !isActive" // при клике меняется значение true/false
:class="{'red': isActive, 'green': !isActive}" // добавляется класс либо red лиюо green в зависимости от значения атрибута isActive
:class="[{'red': isActive}, color]" // массив добавления, если значение isActive true, то добавится класс red, иначе значение 
переменной color






























