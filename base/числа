Метод num.toString(base) возвращает строковое представление числа num в системе счисления base
  
  let num = 255;
  alert( num.toString(16) );  // ff
  alert( num.toString(2) );   // 11111111
  
Math.floor
Округление в меньшую сторону: 3.1 становится 3, а -1.1 — -2.

Math.ceil
Округление в большую сторону: 3.1 становится 4, а -1.1 — -1.

Math.round
Округление до ближайшего целого: 3.1 становится 3, 3.6 — 4, а -1.1 — -1.

Math.trunc (не поддерживается в Internet Explorer)
Производит удаление дробной части без округления: 3.1 становится 3, а -1.1 — -1.

Округление до n знаков после запятой:
  1. Умножить и разделить.
    let num = 1.23456;
    alert( Math.floor(num * 100) / 100 ); // 1.23456 -> 123.456 -> 123 -> 1.23
  2. Метод toFixed(n) округляет число до n знаков после запятой и возвращает строковое представление результата.
  Мы можем преобразовать полученное значение в число, используя унарный оператор + или Number(), 
  пример с унарным оператором: +num.toFixed(5).
    let num = 12.34;
    alert( num.toFixed(1) ); // "12.3"
    
isNaN(value) преобразует значение в число и проверяет является ли оно NaN
isFinite(value) преобразует аргумент в число и возвращает true, если оно является обычным числом, т.е. не NaN/Infinity/-Infinity

parseInt и parseFloat - Они «читают» число из строки. Если в процессе чтения возникает ошибка, они возвращают полученное до ошибки число. 
Функция parseInt возвращает целое число, а parseFloat возвращает число с плавающей точкой
