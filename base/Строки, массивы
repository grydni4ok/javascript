СТРОКИ
Свойство length содержит длину строки

Получить символ, который занимает позицию pos, можно с помощью квадратных скобок: [pos]. 
Также можно использовать метод charAt: str.charAt(pos). Первый символ занимает нулевую позицию
  // получаем первый символ
  alert( str[0] ); // H
  alert( str.charAt(0) ); // H

  // получаем последний символ
  alert( str[str.length - 1] ); // o
  
Методы toLowerCase() и toUpperCase() меняют регистр символов

Поиск подстроки
str.indexOf(substr, pos) - ищет подстроку substr в строке str, начиная с позиции pos, и возвращает позицию, 
на которой располагается совпадение, либо -1 при отсутствии совпадений
Более современный метод str.includes(substr, pos) возвращает true, если в строке str есть подстрока substr, либо false, если нет.

Получение подстроки
str.slice(start [, end]) - Возвращает часть строки от start до (не включая) end
  let str = "stringify";
  // 'strin', символы от 0 до 5 (не включая 5)




МАССИВЫ
let arr = [];
pop - Удаляет последний элемент из массива и возвращает его
push - Добавляет элемент в конец массива
shift - Удаляет из массива первый элемент и возвращает его
unshift - Добавляет элемент в начало массива

Перебор элементов
for (let i = 0; i < arr.length; i++) {
  alert( arr[i] );
}
for (let key in arr) {
  alert( arr[key] ); // Яблоко, Апельсин, Груша
}

arr.splice(index[, deleteCount, elem1, ..., elemN]) - Он начинает с позиции index, удаляет deleteCount элементов и вставляет 
elem1, ..., elemN на их место. Возвращает массив из удалённых элементов.
